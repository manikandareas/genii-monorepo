meta {
  name: Login
  type: http
  seq: 1
}

post {
  url: {{baseUrl}}/auth/login
  body: json
  auth: none
}

headers {
  Content-Type: application/json
}

body:json {
  {
    "email": "test@example.com",
    "password": "password123"
  }
}

tests {
  test("Status code is 200", function() {
    expect(res.status).to.equal(200);
  });

  test("Response has access token", function() {
    expect(res.body).to.have.property("accessToken");
    expect(res.body.accessToken).to.be.a("string");
  });

  test("Response has refresh token", function() {
    expect(res.body).to.have.property("refreshToken");
    expect(res.body.refreshToken).to.be.a("string");
  });

  test("Response has expiration time", function() {
    expect(res.body).to.have.property("expiresIn");
    expect(res.body.expiresIn).to.be.a("number");
  });

  test("User data is returned", function() {
    expect(res.body).to.have.property("user");
    expect(res.body.user).to.have.property("id");
    expect(res.body.user).to.have.property("name");
    expect(res.body.user).to.have.property("email");
    expect(res.body.user).to.have.property("emailVerified");
  });

  // Store tokens for other requests
  if (res.body.accessToken) {
    bru.setEnvVar("accessToken", res.body.accessToken);
  }
  if (res.body.refreshToken) {
    bru.setEnvVar("refreshToken", res.body.refreshToken);
  }
}
